{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/audio.js","webpack:///./src/board.js","webpack:///./src/dom-loader.js","webpack:///./src/drawshapes.js","webpack:///./src/game.js","webpack:///./src/index.js","webpack:///./src/round.js","webpack:///./src/shapes.js","webpack:///./src/spots.js"],"names":["startgame_sound","Audio","correct_sound","wrong_sound","gameover_sound","reset_sound","music","select_sound","submit_sound","sound","toggleSound","Board","ctx","heartSpot","otherSpots","heart","Shape","shuffledSpots","shuffle","otherShapes","otherShapesObj","map","shape","draw","coordinates","x","y","i","length","spots","newPos","temp","Math","floor","random","canvas","document","getElementById","easy_span","medium_span","hard_span","impossible_span","plus_span","minus_span","round_div","reset_div","points_div","howtoplay_div","gameover_span","playbutton","sounds_div","scorelist_ul","name_input","drawSpade","context","width","height","color","save","bottomWidth","topHeight","bottomHeight","beginPath","moveTo","bezierCurveTo","closePath","fillStyle","fill","quadraticCurveTo","lineTo","restore","drawHeart","topCurveHeight","drawClub","circleRadius","arc","PI","drawDiamond","Game","dom","getContext","level","speed","numRounds","roundNum","buffer","play","bind","nextRound","point","audio","setTimeout","gameOver","round","Round","start","toggleGameInSession","style","display","addScore","points","gameInSession","console","log","addEventListener","event","code","game","changeLevel","lev","resetLevelColors","Spot","filter","spot","location","gameHeight","gameWidth","board","generate","clearSpots","clearRect","type","colors","getCoordinates"],"mappings":"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AsB,gEAAA,CAAoBkB,KAApB,CAA0BxC,KAA1B,GAAkC,OAAlC;AACH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA,I;;;;;;;;;;;;;;;;;;;;;;;ACnSA;AACA;AACA;;IAEqBqC,K;;;AACjB,iBAAYlF,GAAZ,EAAiBsE,KAAjB,EAAwB;AAAA;;AAAA;;AACpB,SAAKtE,GAAL,GAAWA,GAAX;AACA,SAAKsE,KAAL,GAAaA,KAAb;AACA,SAAKrD,KAAL,GAAa,CAAC,KAAD,EAAQ,QAAR,EAAkB,MAAlB,EAA0B,OAA1B,CAAb;AACA,SAAKhB,SAAL,GAAiB,IAAIkG,8CAAJ,CAAS,KAAKlF,KAAL,CAAWG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAAKL,KAAL,CAAWD,MAAtC,CAAX,CAAT,CAAjB;AACA,SAAKd,UAAL,GACI,KAAKe,KAAL,CAAWmF,MAAX,CAAkB,UAAAC,IAAI;AAAA,aAAIA,IAAI,KAAK,KAAI,CAACpG,SAAL,CAAeqG,QAA5B;AAAA,KAAtB,EACC7F,GADD,CACK,UAAA4F,IAAI;AAAA,aAAI,IAAIF,8CAAJ,CAASE,IAAT,CAAJ;AAAA,KADT,CADJ;AAGA,SAAKE,UAAL,GAAkB,IAAlB;AACA,SAAKC,SAAL,GAAiB,IAAjB;AACH;;;;4BAEO;AACJ,UAAIC,KAAK,GAAG,IAAI1G,8CAAJ,CAAU,KAAKC,GAAf,EAAoB,KAAKC,SAAzB,EAAoC,KAAKC,UAAzC,CAAZ;AACAuG,WAAK,CAACC,QAAN;AACA,WAAKC,UAAL,CAAgB,KAAKrC,KAArB;AACH;;;+BAEUA,K,EAAO;AAAA;;AACdS,gBAAU,CAAC;AAAA,eACP,MAAI,CAAC/E,GAAL,CAAS4G,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,MAAI,CAACJ,SAA9B,EAAyC,MAAI,CAACD,UAA9C,CADO;AAAA,OAAD,EACqDjC,KADrD,CAAV;AAGH;;;;KAIL;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AC/HA;;IAEqBlE,K;;;AACjB,iBAAYyG,IAAZ,EAAkB;AAAA;;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKjE,MAAL,GAAc,EAAd;AACA,SAAKD,KAAL,GAAa,EAAb;AACA,SAAKmE,MAAL,GAAc,CACV,KADU,EAEV,WAFU,EAGV,SAHU,EAIV,MAJU,EAKV,WALU,CAAd;AAOA,SAAKjE,KAAL,GAAa,KAAKiE,MAAL,CAAY1F,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAAKwF,MAAL,CAAY9F,MAAvC,CAAZ,CAAb;AACH;;;;yBAEIhB,G,EAAKa,C,EAAGC,C,EAAG;AACZ,cAAQ,KAAK+F,IAAb;AACI,aAAK,OAAL;AACI,iBAAO,KAAKlD,SAAL,CAAe3D,GAAf,EAAoBa,CAApB,EAAuBC,CAAvB,CAAP;;AACJ,aAAK,OAAL;AACI,iBAAO,KAAK2B,SAAL,CAAezC,GAAf,EAAoBa,CAApB,EAAuBC,CAAvB,CAAP;;AACJ,aAAK,MAAL;AACI,iBAAO,KAAK+C,QAAL,CAAc7D,GAAd,EAAmBa,CAAnB,EAAsBC,CAAtB,CAAP;;AACJ,aAAK,SAAL;AACI,iBAAO,KAAKmD,WAAL,CAAiBjE,GAAjB,EAAsBa,CAAtB,EAAyBC,CAAzB,CAAP;AARR;AAUH;;;8BAES4B,O,EAAS7B,C,EAAGC,C,EAAG;AACrB4B,aAAO,CAACI,IAAR;AACA,UAAIC,WAAW,GAAG,KAAKJ,KAAL,GAAa,GAA/B;AACA,UAAIK,SAAS,GAAG,KAAKJ,MAAL,GAAc,GAA9B;AACA,UAAIK,YAAY,GAAG,KAAKL,MAAL,GAAc,GAAjC;AAEAF,aAAO,CAACQ,SAAR;AACAR,aAAO,CAACS,MAAR,CAAetC,CAAf,EAAkBC,CAAlB,EAPqB,CASrB;;AACA4B,aAAO,CAACU,aAAR,CACIvC,CADJ,EACOC,CAAC,GAAGkC,SAAS,GAAG,CADvB,EAC0B;AACtBnC,OAAC,GAAG,KAAK8B,KAAL,GAAa,CAFrB,EAEwB7B,CAAC,GAAGkC,SAAS,GAAG,CAFxC,EAE2C;AACvCnC,OAAC,GAAG,KAAK8B,KAAL,GAAa,CAHrB,EAGwB7B,CAAC,GAAGkC,SAH5B,CAGsC;AAHtC,QAVqB,CAgBrB;;AACAN,aAAO,CAACU,aAAR,CACIvC,CAAC,GAAG,KAAK8B,KAAL,GAAa,CADrB,EACwB7B,CAAC,GAAGkC,SAAS,GAAG,GADxC,EAC6C;AACzCnC,OAFJ,EAEOC,CAAC,GAAGkC,SAAS,GAAG,GAFvB,EAE4B;AACxBnC,OAHJ,EAGOC,CAAC,GAAGkC,SAHX,CAGqB;AAHrB,QAjBqB,CAuBrB;;AACAN,aAAO,CAACU,aAAR,CACIvC,CADJ,EACOC,CAAC,GAAGkC,SAAS,GAAG,GADvB,EAC4B;AACxBnC,OAAC,GAAG,KAAK8B,KAAL,GAAa,CAFrB,EAEwB7B,CAAC,GAAGkC,SAAS,GAAG,GAFxC,EAE6C;AACzCnC,OAAC,GAAG,KAAK8B,KAAL,GAAa,CAHrB,EAGwB7B,CAAC,GAAGkC,SAH5B,CAGsC;AAHtC,QAxBqB,CA8BrB;;AACAN,aAAO,CAACU,aAAR,CACIvC,CAAC,GAAG,KAAK8B,KAAL,GAAa,CADrB,EACwB7B,CAAC,GAAGkC,SAAS,GAAG,CADxC,EAC2C;AACvCnC,OAFJ,EAEOC,CAAC,GAAGkC,SAAS,GAAG,CAFvB,EAE0B;AACtBnC,OAHJ,EAGOC,CAHP,CAGS;AAHT;AAMA4B,aAAO,CAACW,SAAR;AACAX,aAAO,CAACY,SAAR,GAAoB,KAAKT,KAAzB;AACAH,aAAO,CAACa,IAAR,GAvCqB,CAyCrB;;AACAb,aAAO,CAACQ,SAAR;AACAR,aAAO,CAACS,MAAR,CAAetC,CAAf,EAAkBC,CAAC,GAAGkC,SAAtB;AACAN,aAAO,CAACc,gBAAR,CACI3C,CADJ,EACOC,CAAC,GAAGkC,SAAJ,GAAgBC,YADvB,EACqC;AACjCpC,OAAC,GAAGkC,WAAW,GAAG,CAFtB,EAEyBjC,CAAC,GAAGkC,SAAJ,GAAgBC,YAFzC,CAEsD;AAFtD;AAIAP,aAAO,CAACe,MAAR,CAAe5C,CAAC,GAAGkC,WAAW,GAAG,CAAjC,EAAoCjC,CAAC,GAAGkC,SAAJ,GAAgBC,YAApD;AACAP,aAAO,CAACc,gBAAR,CACI3C,CADJ,EACOC,CAAC,GAAGkC,SAAJ,GAAgBC,YADvB,EACqC;AACjCpC,OAFJ,EAEOC,CAAC,GAAGkC,SAFX,CAEqB;AAFrB;AAIAN,aAAO,CAACW,SAAR;AACAX,aAAO,CAACY,SAAR,GAAoB,KAAKT,KAAzB;AACAH,aAAO,CAACa,IAAR;AACAb,aAAO,CAACgB,OAAR;AACH;;;8BAEShB,O,EAAS7B,C,EAAGC,C,EAAG;AACrB4B,aAAO,CAACI,IAAR;AACAJ,aAAO,CAACQ,SAAR;AACA,UAAIU,cAAc,GAAG,KAAKhB,MAAL,GAAc,GAAnC;AACAF,aAAO,CAACS,MAAR,CAAetC,CAAf,EAAkBC,CAAC,GAAG8C,cAAtB,EAJqB,CAKrB;;AACAlB,aAAO,CAACU,aAAR,CACIvC,CADJ,EAEIC,CAFJ,EAGID,CAAC,GAAG,KAAK8B,KAAL,GAAa,CAHrB,EAII7B,CAJJ,EAKID,CAAC,GAAG,KAAK8B,KAAL,GAAa,CALrB,EAMI7B,CAAC,GAAG8C,cANR,EANqB,CAerB;;AACAlB,aAAO,CAACU,aAAR,CACIvC,CAAC,GAAG,KAAK8B,KAAL,GAAa,CADrB,EAEI7B,CAAC,GAAG,CAAC,KAAK8B,MAAL,GAAcgB,cAAf,IAAiC,CAFzC,EAGI/C,CAHJ,EAIIC,CAAC,GAAG,CAAC,KAAK8B,MAAL,GAAcgB,cAAf,IAAiC,CAJzC,EAKI/C,CALJ,EAMIC,CAAC,GAAG,KAAK8B,MANb,EAhBqB,CAyBrB;;AACAF,aAAO,CAACU,aAAR,CACIvC,CADJ,EAEIC,CAAC,GAAG,CAAC,KAAK8B,MAAL,GAAcgB,cAAf,IAAiC,CAFzC,EAGI/C,CAAC,GAAG,KAAK8B,KAAL,GAAa,CAHrB,EAII7B,CAAC,GAAG,CAAC,KAAK8B,MAAL,GAAcgB,cAAf,IAAiC,CAJzC,EAKI/C,CAAC,GAAG,KAAK8B,KAAL,GAAa,CALrB,EAMI7B,CAAC,GAAG8C,cANR,EA1BqB,CAmCrB;;AACAlB,aAAO,CAACU,aAAR,CAAsBvC,CAAC,GAAG,KAAK8B,KAAL,GAAa,CAAvC,EAA0C7B,CAA1C,EAA6CD,CAA7C,EAAgDC,CAAhD,EAAmDD,CAAnD,EAAsDC,CAAC,GAAG8C,cAA1D;AAEAlB,aAAO,CAACW,SAAR;AACAX,aAAO,CAACY,SAAR,GAAoB,KAAKT,KAAzB;AACAH,aAAO,CAACa,IAAR;AACAb,aAAO,CAACgB,OAAR;AACH;;;6BAEQhB,O,EAAS7B,C,EAAGC,C,EAAG;AACpB4B,aAAO,CAACI,IAAR;AACA,UAAIgB,YAAY,GAAG,KAAKnB,KAAL,GAAa,GAAhC;AACA,UAAII,WAAW,GAAG,KAAKJ,KAAL,GAAa,GAA/B;AACA,UAAIM,YAAY,GAAG,KAAKL,MAAL,GAAc,IAAjC;AACAF,aAAO,CAACY,SAAR,GAAoB,KAAKT,KAAzB,CALoB,CAOpB;;AACAH,aAAO,CAACQ,SAAR;AACAR,aAAO,CAACqB,GAAR,CACIlD,CADJ,EAEIC,CAAC,GAAGgD,YAAJ,GAAmB,KAAKlB,MAAL,GAAc,IAFrC,EAGIkB,YAHJ,EAII,CAJJ,EAKI,IAAI1C,IAAI,CAAC4C,EALb,EAMI,KANJ;AAQAtB,aAAO,CAACa,IAAR,GAjBoB,CAmBpB;;AACAb,aAAO,CAACQ,SAAR;AACAR,aAAO,CAACqB,GAAR,CACIlD,CAAC,GAAGiD,YADR,EAEIhD,CAAC,GAAG,KAAK8B,MAAL,GAAc,GAFtB,EAGIkB,YAHJ,EAII,CAJJ,EAKI,IAAI1C,IAAI,CAAC4C,EALb,EAMI,KANJ;AAQAtB,aAAO,CAACY,SAAR,GAAoB,KAAKT,KAAzB;AACAH,aAAO,CAACa,IAAR,GA9BoB,CAgCpB;;AACAb,aAAO,CAACQ,SAAR;AACAR,aAAO,CAACqB,GAAR,CACIlD,CAAC,GAAGiD,YADR,EAEIhD,CAAC,GAAG,KAAK8B,MAAL,GAAc,GAFtB,EAGIkB,YAHJ,EAII,CAJJ,EAKI,IAAI1C,IAAI,CAAC4C,EALb,EAMI,KANJ;AAQAtB,aAAO,CAACY,SAAR,GAAoB,KAAKT,KAAzB;AACAH,aAAO,CAACa,IAAR,GA3CoB,CA6CpB;;AACAb,aAAO,CAACQ,SAAR;AACAR,aAAO,CAACqB,GAAR,CAAYlD,CAAZ,EAAeC,CAAC,GAAG,KAAK8B,MAAL,GAAc,GAAjC,EAAsCkB,YAAY,GAAG,CAArD,EAAwD,CAAxD,EAA2D,IAAI1C,IAAI,CAAC4C,EAApE,EAAwE,KAAxE;AACAtB,aAAO,CAACa,IAAR,GAhDoB,CAkDpB;;AACAb,aAAO,CAACS,MAAR,CAAetC,CAAf,EAAkBC,CAAC,GAAG,KAAK8B,MAAL,GAAc,GAApC;AACAF,aAAO,CAACc,gBAAR,CAAyB3C,CAAzB,EAA4BC,CAAC,GAAG,KAAK8B,MAArC,EAA6C/B,CAAC,GAAGkC,WAAW,GAAG,CAA/D,EAAkEjC,CAAC,GAAG,KAAK8B,MAA3E;AACAF,aAAO,CAACe,MAAR,CAAe5C,CAAC,GAAGkC,WAAW,GAAG,CAAjC,EAAoCjC,CAAC,GAAG,KAAK8B,MAA7C;AACAF,aAAO,CAACc,gBAAR,CAAyB3C,CAAzB,EAA4BC,CAAC,GAAG,KAAK8B,MAArC,EAA6C/B,CAA7C,EAAgDC,CAAC,GAAG,KAAK8B,MAAL,GAAc,GAAlE;AACAF,aAAO,CAACW,SAAR;AACAX,aAAO,CAACa,IAAR;AACAb,aAAO,CAACgB,OAAR;AACH;;;gCAEWhB,O,EAAS7B,C,EAAGC,C,EAAG;AACvB4B,aAAO,CAACI,IAAR;AACAJ,aAAO,CAACQ,SAAR;AACAR,aAAO,CAACS,MAAR,CAAetC,CAAf,EAAkBC,CAAlB,EAHuB,CAKvB;;AACA4B,aAAO,CAACe,MAAR,CAAe5C,CAAC,GAAG,KAAK8B,KAAL,GAAa,CAAhC,EAAmC7B,CAAC,GAAG,KAAK8B,MAAL,GAAc,CAArD,EANuB,CAQvB;;AACAF,aAAO,CAACe,MAAR,CAAe5C,CAAf,EAAkBC,CAAC,GAAG,KAAK8B,MAA3B,EATuB,CAWvB;;AACAF,aAAO,CAACe,MAAR,CAAe5C,CAAC,GAAG,KAAK8B,KAAL,GAAa,CAAhC,EAAmC7B,CAAC,GAAG,KAAK8B,MAAL,GAAc,CAArD,EAZuB,CAcvB;AACA;;AACAF,aAAO,CAACW,SAAR;AAEAX,aAAO,CAACY,SAAR,GAAoB,KAAKT,KAAzB;AACAH,aAAO,CAACa,IAAR;AACAb,aAAO,CAACgB,OAAR;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;ICtNgByC,I;;;AACjB,gBAAYG,QAAZ,EAAsB;AAAA;;AAClB,SAAKA,QAAL,GAAgBA,QAAhB;AACA,SAAK1F,WAAL,GAAmB,KAAKmG,cAAL,EAAnB;AACH;;;;qCAEgB;AACb,cAAQ,KAAKT,QAAb;AACI,aAAK,KAAL;AACI,iBAAO;AAAEzF,aAAC,EAAE,GAAL;AAAUC,aAAC,EAAE;AAAb,WAAP;AACA;;AACJ,aAAK,OAAL;AACI,iBAAO;AAAED,aAAC,EAAE,GAAL;AAAUC,aAAC,EAAE;AAAb,WAAP;AACA;;AACJ,aAAK,QAAL;AACI,iBAAO;AAAED,aAAC,EAAE,GAAL;AAAUC,aAAC,EAAE;AAAb,WAAP;AACA;;AACJ,aAAK,MAAL;AACI,iBAAO;AAAED,aAAC,EAAE,EAAL;AAASC,aAAC,EAAE;AAAZ,WAAP;AACA;AAZR;AAcH","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","export const startgame_sound = new Audio('assets/sounds/startgame.mp3');\nexport const correct_sound = new Audio('assets/sounds/correct.wav');\nexport const wrong_sound = new Audio('assets/sounds/wrong2.wav');\nexport const gameover_sound = new Audio('assets/sounds/gameover.wav');\nexport const reset_sound = new Audio('assets/sounds/reset.wav');\nexport const music = new Audio('assets/sounds/BEPmidi.mp3');\nexport const select_sound = new Audio('assets/sounds/select.wav');\nexport const submit_sound = new Audio('assets/sounds/submit.wav');\nexport const sound = true;\nexport function toggleSound() { sound = !sound};","import Shape from \"./shapes\";\n\nexport default class Board {\n    constructor(ctx, heartSpot, otherSpots) {\n        this.ctx = ctx;\n        this.heartSpot = heartSpot;\n        this.otherSpots = otherSpots;\n    }\n\n    generate() {\n        let heart = new Shape(\"heart\");\n        let shuffledSpots = this.shuffle(this.otherSpots);\n        let otherShapes = [\"spade\", \"diamond\", \"club\"];\n        let otherShapesObj = otherShapes.map(shape => new Shape(shape)) \n\n        heart.draw(this.ctx, this.heartSpot.coordinates.x, this.heartSpot.coordinates.y);\n\n        for (let i = 0; i < shuffledSpots.length; i++) {\n            let shape = otherShapesObj[i];\n            shape.draw(this.ctx, shuffledSpots[i].coordinates.x, shuffledSpots[i].coordinates.y);\n        } \n    }\n\n    shuffle(spots) {\n        let newPos;\n        let temp;\n        for (let i = spots.length - 1; i > 0; i--) {\n            newPos = Math.floor(Math.random() * (i + 1));\n            temp = spots[i];\n            spots[i] = spots[newPos];\n            spots[newPos] = temp;\n        }\n        return spots;\n    }\n    \n}","export const canvas = document.getElementById('canvas');\nexport const easy_span = document.getElementById('easy');\nexport const medium_span = document.getElementById('medium');\nexport const hard_span = document.getElementById('hard');\nexport const impossible_span = document.getElementById('impossible');\nexport const plus_span = document.getElementById('plus');\nexport const minus_span = document.getElementById('minus');\nexport const round_div = document.getElementById('round');\nexport const reset_div = document.getElementById('reset');\nexport const points_div = document.getElementById('points');\nexport const howtoplay_div = document.getElementById(\"howtoplay\");\nexport const gameover_span = document.getElementById(\"gameover\");\nexport const playbutton = document.getElementById(\"playbutton\");\nexport const sounds_div = document.getElementById(\"sounds\");\nexport const scorelist_ul = document.getElementById(\"scorelist\");\nexport const name_input = document.getElementById(\"name\");","export const drawSpade = function(context, x, y, width, height, color) {\n    context.save();\n    var bottomWidth = width * 0.7;\n    var topHeight = height * 0.7;\n    var bottomHeight = height * 0.3;\n\n    context.beginPath();\n    context.moveTo(x, y);\n\n    // top left of spade          \n    context.bezierCurveTo(\n        x, y + topHeight / 2, // control point 1\n        x - width / 2, y + topHeight / 2, // control point 2\n        x - width / 2, y + topHeight // end point\n    );\n\n    // bottom left of spade\n    context.bezierCurveTo(\n        x - width / 2, y + topHeight * 1.3, // control point 1\n        x, y + topHeight * 1.3, // control point 2\n        x, y + topHeight // end point\n    );\n\n    // bottom right of spade\n    context.bezierCurveTo(\n        x, y + topHeight * 1.3, // control point 1\n        x + width / 2, y + topHeight * 1.3, // control point 2\n        x + width / 2, y + topHeight // end point\n    );\n\n    // top right of spade\n    context.bezierCurveTo(\n        x + width / 2, y + topHeight / 2, // control point 1\n        x, y + topHeight / 2, // control point 2\n        x, y // end point\n    );\n\n    context.closePath();\n    context.fillStyle = color;\n    context.fill();\n\n    // bottom of spade\n    context.beginPath();\n    context.moveTo(x, y + topHeight);\n    context.quadraticCurveTo(\n        x, y + topHeight + bottomHeight, // control point\n        x - bottomWidth / 2, y + topHeight + bottomHeight // end point\n    );\n    context.lineTo(x + bottomWidth / 2, y + topHeight + bottomHeight);\n    context.quadraticCurveTo(\n        x, y + topHeight + bottomHeight, // control point\n        x, y + topHeight // end point\n    );\n    context.closePath();\n    context.fillStyle = color;\n    context.fill();\n    context.restore();\n}\n\n export const drawHeart = function(context, x, y, width, height, color) {\n    context.save();\n    context.beginPath();\n    var topCurveHeight = height * 0.3;\n    context.moveTo(x, y + topCurveHeight);\n    // top left curve\n    context.bezierCurveTo(\n    x,\n    y,\n    x - width / 2,\n    y,\n    x - width / 2,\n    y + topCurveHeight\n    );\n\n    // bottom left curve\n    context.bezierCurveTo(\n    x - width / 2,\n    y + (height + topCurveHeight) / 2,\n    x,\n    y + (height + topCurveHeight) / 2,\n    x,\n    y + height\n    );\n\n    // bottom right curve\n    context.bezierCurveTo(\n    x,\n    y + (height + topCurveHeight) / 2,\n    x + width / 2,\n    y + (height + topCurveHeight) / 2,\n    x + width / 2,\n    y + topCurveHeight\n    );\n\n    // top right curve\n    context.bezierCurveTo(x + width / 2, y, x, y, x, y + topCurveHeight);\n\n    context.closePath();\n    context.fillStyle = color;\n    context.fill();\n    context.restore();\n        };\n\n export const drawClub = function(context, x, y, width, height, color) {\n   context.save();\n   var circleRadius = width * 0.3;\n   var bottomWidth = width * 0.5;\n   var bottomHeight = height * 0.35;\n   context.fillStyle = color;\n\n   // top circle\n   context.beginPath();\n   context.arc(\n     x,\n     y + circleRadius + height * 0.05,\n     circleRadius,\n     0,\n     2 * Math.PI,\n     false\n   );\n   context.fill();\n\n   // bottom right circle\n   context.beginPath();\n   context.arc(\n     x + circleRadius,\n     y + height * 0.6,\n     circleRadius,\n     0,\n     2 * Math.PI,\n     false\n   );\n   context.fillStyle = color;\n   context.fill();\n\n   // bottom left circle\n   context.beginPath();\n   context.arc(\n     x - circleRadius,\n     y + height * 0.6,\n     circleRadius,\n     0,\n     2 * Math.PI,\n     false\n   );\n   context.fillStyle = color;\n   context.fill();\n\n   // center filler circle\n   context.beginPath();\n   context.arc(x, y + height * 0.5, circleRadius / 2, 0, 2 * Math.PI, false);\n   context.fill();\n\n   // bottom of club\n   context.moveTo(x, y + height * 0.6);\n   context.quadraticCurveTo(x, y + height, x - bottomWidth / 2, y + height);\n   context.lineTo(x + bottomWidth / 2, y + height);\n   context.quadraticCurveTo(x, y + height, x, y + height * 0.6);\n   context.closePath();\n   context.fill();\n   context.restore();\n }\n\n export const drawDiamond = function(context, x, y, width, height, color) {\n   context.save();\n   context.beginPath();\n   context.moveTo(x, y);\n\n   // top left edge\n   context.lineTo(x - width / 2, y + height / 2);\n\n   // bottom left edge\n   context.lineTo(x, y + height);\n\n   // bottom right edge\n   context.lineTo(x + width / 2, y + height / 2);\n\n   // closing the path automatically creates\n   // the top right edge\n   context.closePath();\n\n   context.fillStyle = color;\n   context.fill();\n   context.restore();\n }\n","import * as dom from \"./dom-loader.js\"; \nimport Round from \"./round.js\";\nimport {toggleGameInSession} from \"./index\";\nimport * as audio from \"./audio\";\n\n\nexport default class Game {\n    constructor() {\n        this.ctx = dom.canvas.getContext('2d');\n        this.level = \"medium\";\n        this.speed = 900;\n        this.numRounds = 2;\n        this.roundNum = null;\n        this.buffer = 1500;\n        this.play = this.play.bind(this);\n        this.nextRound = this.nextRound.bind(this);\n        this.point = 0;\n\n    }\n\n    play() {  \n        if (audio.sound) audio.startgame_sound.play();\n        // arrowKeys = false;\n        this.roundNum = 0;\n        setTimeout(this.nextRound, this.speed + this.buffer);\n    }\n\n    nextRound() {\n        if (this.roundNum === this.numRounds) {\n            this.gameOver();\n            // arrowKeys = false;\n            return;\n        }\n\n        this.roundNum += 1;\n        let round = new Round(this.ctx, this.speed);\n        round.start();\n        setTimeout(this.nextRound, this.speed + this.buffer);\n\n        // setTimeout(() => round.clearSpots(), this.speed);\n        // setTimeout(() => toggleOff(), this.speed);\n    }\n\n\n    gameOver() {\n        toggleGameInSession();\n        dom.gameover_span.style.display = \"block\";\n        dom.round_div.style.display = \"none\"\n        if (audio.sound) audio.gameover_sound.play();\n        dom.reset_div.style.display = \"none\";\n        addScore();\n    }\n\n    changeScore(points) {\n        this.point += points;\n    }\n\n\n\n// }\n        // dom.round_div.style.display = \"block\";\n        // dom.round_div.innerText = \"Round \" + roundNum;\n        // dom.reset_div.style.display = \"block\";\n        // dom.plus_span.style.display = \"none\";\n        // dom.minus_span.style.display = \"none\";\n\n        // dom.reset_div.addEventListener(\"click\", () => { \n        //     reset = true; dom.reset_div.style.color = \"red\"; \n        //     if (sound) dom.reset_sound.play();});\n\n        //     if (reset === true) {\n        //         startOver();\n        //         return;\n        //     }\n\n        //     if (roundNum > numRounds) {\n        //         gameOver();\n        //         arrowKeys = false;\n        //         return;\n        //     }\n\n    //         round = new Round(\n    //             ctx,\n    //             heartSpots, \n    //             shapeSize, \n    //             topSpot, \n    //             rightSpot, \n    //             bottomSpot, \n    //             leftSpot, \n    //             drawHeart,\n    //             drawSpade,\n    //             drawClub,\n    //             drawDiamond,\n    //             roundNum,\n    //             speed\n    //             );\n\n\n    //             round.flashHeart();\n    //             round.flashShapes();\n    //             arrowKeys = true;\n\n    //         document.addEventListener(\"keydown\", event => {\n    //             switch (event.keyCode) {\n    //                 case 37:\n    //                     if (arrowKeys) {\n    //                         check(round, 3); }\n    //                     arrowKeys = false;\n    //                     break;\n    //                 case 38:\n    //                     if (arrowKeys) {\n    //                         check(round, 0);\n    //                     }\n    //                     arrowKeys = false;\n    //                     break;\n    //                 case 39:\n    //                     if (arrowKeys) {\n    //                         check(round, 1);\n    //                     }\n    //                     arrowKeys = false;\n    //                     break;\n    //                 case 40:\n    //                     if (arrowKeys) {\n    //                         check(round, 2);\n    //                     }\n    //                     arrowKeys = false;\n    //                     break;\n    //             }\n    //     });\n\n    //     setTimeout(() => round.clearSpots(), speed);\n    //     setTimeout(() => toggleOff(), speed);\n    //     setTimeout(nextRound, speed + 1500);  \n    // }\n    \n}","// import Round from \"./round\";\n// // import InputHandler from \"./input\";\n\nimport * as dom from \"./dom-loader.js\"\nimport Game from \"./game.js\";\nimport * as audio from \"./audio\";\n\n\nlet gameInSession = false;\nlet speed = 900;\nlet level = \"medium\";\n\nexport function toggleGameInSession() {\n    // debugger;\n    gameInSession = !gameInSession\n    console.log(gameInSession);\n}\n\n\ndocument.addEventListener(\"keyup\", event => {\n    if (!gameInSession && event.code === \"Space\") {\n        let game = new Game();\n        toggleGameInSession();\n        dom.howtoplay_div.style.display = \"none\";\n        // dom.gameover_span.style.display = \"none\";\n        game.play();\n    }\n    // debugger;\n})\n\n// let roundNum;\n// let heartSpots = [];\n// let numRounds = 10;\n// let round;\n// let arrowKeys = false;\n// // let speed = 900;\n// // let level = \"medium\";\n// let point;\n// let reset = false;\n// let startgame_sound = new Audio('assets/sounds/startgame.mp3');\n// let correct_sound = new Audio('assets/sounds/correct.wav');\n// let wrong_sound = new Audio('assets/sounds/wrong2.wav');\n// let gameover_sound = new Audio('assets/sounds/gameover.wav');\n// let reset_sound = new Audio('assets/sounds/reset.wav');\n// let music = new Audio('assets/sounds/BEPmidi.mp3');\n// let select_sound = new Audio('assets/sounds/select.wav');\n// let submit_sound = new Audio('assets/sounds/submit.wav');\n// music.currentTime = 2;\n// music.volume = 0.6;\n// music.loop = true; \n// let sound = true;\n// let name = \"Player\";\n// let scoreNum = 0;\n\n\ndom.easy_span.addEventListener(\"click\", () => changeLevel(\"easy\"));\ndom.medium_span.addEventListener(\"click\", () => changeLevel(\"medium\"));\ndom.hard_span.addEventListener(\"click\", () => changeLevel(\"hard\"));\ndom.impossible_span.addEventListener(\"click\", () => changeLevel(\"impossible\"));\n\n\nfunction changeLevel(lev) {\n    if (gameInSession === false) {\n        if (audio.sound) audio.select_sound.play();\n        switch (lev) {\n            case \"easy\":\n                speed = 2000;\n                level = \"easy\";\n                resetLevelColors();\n                dom.easy_span.style.color = \"tomato\";\n                break;\n            case \"medium\":\n                speed = 1000;\n                level = \"medium\";\n                resetLevelColors();\n                dom.medium_span.style.color = \"tomato\";\n                break;\n            case \"hard\":\n                speed = 700;\n                level = \"hard\";\n                resetLevelColors();\n                dom.hard_span.style.color = \"tomato\";\n                break;\n            case \"impossible\":\n                resetLevelColors();\n                dom.impossible_span.style.color = \"tomato\";\n                speed = 400;\n                level = \"impossible\";\n                break;\n        }\n    }\n}\n\nfunction resetLevelColors() {\n    dom.easy_span.style.color = \"black\";\n    dom.medium_span.style.color = \"black\";\n    dom.hard_span.style.color = \"black\";\n    dom.impossible_span.style.color = \"black\";\n}\n\n// document.addEventListener(\"keyup\", event => {\n//     if (event.code === \"Space\") {\n//         if (gameInSession === false) {\n//             play();\n//             point = 0;\n//             dom.points_div.innerText = point;\n//             gameInSession = true;\n//             dom.howtoplay_div.style.display = \"none\";\n//         }\n\n//         dom.gameover_span.style.display = \"none\";\n//     }\n// })\n\n\n// // function play() {\n// //     if (sound) startgame_sound.play();\n// //     arrowKeys = false;\n// //     roundNum = 0;\n// //     heartSpots = [];\n// //     for (let i = 0; i < numRounds; i++) {\n// //         heartSpots.push(Math.floor(Math.random() * 4));\n// //     }\n// //     setTimeout(() => nextRound(), 1500);\n// // }\n\n// export function nextRound() {\n//     roundNum += 1;\n//     dom.round_div.style.display = \"block\";\n//     dom.round_div.innerText = \"Round \" + roundNum;\n//     dom.reset_div.style.display = \"block\";\n//     dom.plus_span.style.display = \"none\";\n//     dom.minus_span.style.display = \"none\";\n    \n//     dom.reset_div.addEventListener(\"click\", () => { reset = true; dom.reset_div.style.color = \"red\"; if (sound) dom.reset_sound.play();});\n\n//     if (reset === true) {\n//         startOver();\n//         return;\n//     }\n\n//     if (roundNum > numRounds) {\n//         gameOver();\n//         arrowKeys = false;\n//         return;\n//     }\n\n//     round = new Round(\n//         ctx,\n//         heartSpots, \n//         shapeSize, \n//         topSpot, \n//         rightSpot, \n//         bottomSpot, \n//         leftSpot, \n//         drawHeart,\n//         drawSpade,\n//         drawClub,\n//         drawDiamond,\n//         roundNum,\n//         speed\n//         );\n\n  \n//         round.flashHeart();\n//         round.flashShapes();\n//         arrowKeys = true;\n\n//     document.addEventListener(\"keydown\", event => {\n//         switch (event.keyCode) {\n//             case 37:\n//                 if (arrowKeys) {\n//                     check(round, 3); }\n//                 arrowKeys = false;\n//                 break;\n//             case 38:\n//                 if (arrowKeys) {\n//                     check(round, 0);\n//                 }\n//                 arrowKeys = false;\n//                 break;\n//             case 39:\n//                 if (arrowKeys) {\n//                     check(round, 1);\n//                 }\n//                 arrowKeys = false;\n//                 break;\n//             case 40:\n//                 if (arrowKeys) {\n//                     check(round, 2);\n//                 }\n//                 arrowKeys = false;\n//                 break;\n//         }\n//     });\n//     setTimeout(() => round.clearSpots(), speed);\n//     setTimeout(() => toggleOff(), speed);\n//     setTimeout(nextRound, speed + 1500);  \n// }\n\n// function startOver() {\n//     reset = false;\n//     round = 0;\n//     point = 0;\n//     dom.points_div.innerText = point;\n//     dom.round_div.style.display = \"none\";\n//     dom.reset_div.style.display = \"none\";\n//     gameInSession = false;\n//     dom.howtoplay_div.style.display = \"block\";\n//     dom.reset_div.style.color = \"rgb(246, 171, 73)\";\n// }\n\n// function toggleOff() {\n//     arrowKeys = false;\n// }\n\n// export function check(round, userChoice) {\n//     if (userChoice === round.heartSpots[round.roundNum - 1]) {\n//         dom.plus_span.style.display = \"block\";\n//         dom.plus_span.classList.add(\"popup\");\n//         point += 5;\n//         dom.points_div.innerText = point;\n//         round.clearSpots();\n//         if (sound) correct_sound.play();\n        \n//     } else {\n//         dom.minus_span.style.display = \"block\";\n//         dom.minus_span.classList.add(\"popup\");\n//         point -= 5;\n//         dom.points_div.innerText = point;\n//         round.clearSpots();\n//         if (sound) wrong_sound.play();\n//     }\n// }\n\n// function gameOver() {\n//     gameInSession = false;\n//     dom.gameover_span.style.display = \"block\";\n//     dom.round_div.style.display = \"none\"\n//     if (sound) gameover_sound.play();\n//     dom.reset_div.style.display = \"none\";\n//     addScore();\n\n\n    \n// }\n\n// function addScore() {\n//     scoreNum += 1;\n\n//     if (scoreNum === 9) {\n//         dom.scorelist_ul.removeChild(scorelist_ul.firstChild);\n//         scoreNum -= 1;\n//     }\n\n//     let div = document.createElement(\"div\");\n//     div.innerText = name + \"  |  \" + point + \"pts\" + \"  |  \" + level;\n//     dom.scorelist_ul.appendChild(div);\n// }\n\n// playbutton.addEventListener(\"click\", toggleMusic);\n\n// function toggleMusic() {\n//     if (playbutton.classList.value === \"play\") {\n//         playbutton.classList = \"pause\";\n//         music.play();\n//     } else {\n//         playbutton.classList = \"play\";\n//         music.pause();\n//     }\n// }\n\n// dom.sounds_div.addEventListener(\"click\", toggleSounds);\n\n// function toggleSounds() {\n//     if (dom.sounds_div.classList.value === \"sounds\") {\n//         dom.sounds_div.classList = \"mute\";\n//         sound = false;\n//     } else {\n//         dom.sounds_div.classList = \"sounds\";\n//         sound = true;\n//     }\n// }\n\n// dom.name_input.onchange = updateName;\n\n// function updateName() {\n//     if (sound) submit_sound.play();\n//     name = dom.name_input.value;\n//     dom.name_input.style.color = \"rgb(240, 102, 38)\";\n//     dom.name_input.blur();\n// }","import Spot from \"./spots\";\nimport Board from \"./board\";\nimport {changeScore} from \"./game\"\n\nexport default class Round {\n    constructor(ctx, speed) {\n        this.ctx = ctx;\n        this.speed = speed;\n        this.spots = [\"top\", \"bottom\", \"left\", \"right\"];\n        this.heartSpot = new Spot(this.spots[Math.floor(Math.random() * this.spots.length)]);\n        this.otherSpots = \n            this.spots.filter(spot => spot !== this.heartSpot.location)\n            .map(spot => new Spot(spot));\n        this.gameHeight = 1000;\n        this.gameWidth = 1000;\n    }\n\n    start() {\n        let board = new Board(this.ctx, this.heartSpot, this.otherSpots);\n        board.generate();\n        this.clearSpots(this.speed);\n    }\n\n    clearSpots(speed) {\n        setTimeout(() =>\n            this.ctx.clearRect(0, 0, this.gameWidth, this.gameHeight), speed\n        )\n    }\n\n}\n\n// import InputHandler from \"./input\";\n\n// export default class Round {\n//     constructor(\n//         ctx,\n//         heartSpots,\n//         shapeSize,\n//         topSpot,\n//         rightSpot,\n//         bottomSpot,\n//         leftSpot,\n//         roundNum,\n//         speed\n//     ) {\n//         this.gameHeight = 1000;\n//         this.gameWidth = 1000;\n//         this.ctx = ctx;\n//         this.heartSpots = heartSpots;\n//         this.shapeSize = shapeSize;\n//         this.spots = [topSpot, rightSpot, bottomSpot, leftSpot];\n//         this.colors = [\n//             \"red\",\n//             \"lawngreen\",\n//             \"crimson\",\n//             \"gold\",\n//             \"orangered\"\n//         ];\n//         this.roundNum = roundNum;\n//         this.shuffle = this.shuffle.bind(this);\n//         this.choice = null;\n//         this.speed = speed;\n//     }\n        \n//         // flashHeart() {\n//         //     this.drawHeart(\n//         //         this.ctx,\n//         //         this.spots[this.heartSpots[this.roundNum-1]].x,\n//         //         this.spots[this.heartSpots[this.roundNum-1]].y,\n//         //         this.shapeSize.w,\n//         //         this.shapeSize.h,\n//         //         this.colors[Math.floor(Math.random() * this.colors.length)]\n//         //     );\n//         // }\n\n//         // flashShapes() {\n//         //     let noHeartSpots = this.spots.filter((spot, idx) => idx !== this.heartSpots[this.roundNum-1]);\n//         //     let shuffledSpots = this.shuffle(noHeartSpots);\n\n//         //     this.drawSpade(\n//         //         this.ctx,\n//         //         shuffledSpots[0].x,\n//         //         shuffledSpots[0].y,\n//         //         this.shapeSize.w,\n//         //         this.shapeSize.h,\n//         //         this.colors[Math.floor(Math.random() * this.colors.length)],\n//         //         );\n\n//         //     this.drawDiamond(\n//         //         this.ctx,\n//         //         shuffledSpots[1].x,\n//         //         shuffledSpots[1].y,\n//         //         this.shapeSize.w,\n//         //         this.shapeSize.h,\n//         //         this.colors[\n//         //         Math.floor(Math.random() * this.colors.length)\n//         //         ]\n//         //     ); \n\n//         //     this.drawClub(\n//         //         this.ctx,\n//         //         shuffledSpots[2].x,\n//         //         shuffledSpots[2].y,\n//         //         this.shapeSize.w,\n//         //         this.shapeSize.h,\n//         //         this.colors[\n//         //         Math.floor(Math.random() * this.colors.length)\n//         //         ]\n//         //     ); \n//         // }\n\n//         // shuffle(spots) {\n//         //     let newPos;\n//         //     let temp;\n//         //     for (let i = spots.length - 1; i > 0; i--) {\n//         //         newPos = Math.floor(Math.random() * (i + 1));\n//         //         temp = spots[i];\n//         //         spots[i] = spots[newPos];\n//         //         spots[newPos] = temp;\n//         //     }\n//         //     return spots;\n//         //  }\n\n//         //  clearSpots() {\n//         //     this.ctx.clearRect(0, 0, this.gameWidth, this.gameHeight);\n//         //  }\n\n// }","import { drawSpade } from \"./drawshapes\";\n\nexport default class Shape {\n    constructor(type) {\n        this.type = type;\n        this.height = 15;\n        this.width = 10;\n        this.colors = [\n            \"red\",\n            \"lawngreen\",\n            \"crimson\",\n            \"gold\",\n            \"orangered\"\n        ];\n        this.color = this.colors[Math.floor(Math.random() * this.colors.length)];\n    }\n\n    draw(ctx, x, y) {\n        switch (this.type) {\n            case \"heart\":\n                return this.drawHeart(ctx, x, y);\n            case \"spade\":\n                return this.drawSpade(ctx, x, y);\n            case \"club\":\n                return this.drawClub(ctx, x, y);\n            case \"diamond\":\n                return this.drawDiamond(ctx, x, y);\n        }\n    }\n\n    drawSpade(context, x, y) {\n        context.save();\n        var bottomWidth = this.width * 0.7;\n        var topHeight = this.height * 0.7;\n        var bottomHeight = this.height * 0.3;\n\n        context.beginPath();\n        context.moveTo(x, y);\n\n        // top left of spade          \n        context.bezierCurveTo(\n            x, y + topHeight / 2, // control point 1\n            x - this.width / 2, y + topHeight / 2, // control point 2\n            x - this.width / 2, y + topHeight // end point\n        );\n\n        // bottom left of spade\n        context.bezierCurveTo(\n            x - this.width / 2, y + topHeight * 1.3, // control point 1\n            x, y + topHeight * 1.3, // control point 2\n            x, y + topHeight // end point\n        );\n\n        // bottom right of spade\n        context.bezierCurveTo(\n            x, y + topHeight * 1.3, // control point 1\n            x + this.width / 2, y + topHeight * 1.3, // control point 2\n            x + this.width / 2, y + topHeight // end point\n        );\n\n        // top right of spade\n        context.bezierCurveTo(\n            x + this.width / 2, y + topHeight / 2, // control point 1\n            x, y + topHeight / 2, // control point 2\n            x, y // end point\n        );\n\n        context.closePath();\n        context.fillStyle = this.color;\n        context.fill();\n\n        // bottom of spade\n        context.beginPath();\n        context.moveTo(x, y + topHeight);\n        context.quadraticCurveTo(\n            x, y + topHeight + bottomHeight, // control point\n            x - bottomWidth / 2, y + topHeight + bottomHeight // end point\n        );\n        context.lineTo(x + bottomWidth / 2, y + topHeight + bottomHeight);\n        context.quadraticCurveTo(\n            x, y + topHeight + bottomHeight, // control point\n            x, y + topHeight // end point\n        );\n        context.closePath();\n        context.fillStyle = this.color;\n        context.fill();\n        context.restore();\n    }\n\n    drawHeart(context, x, y) {\n        context.save();\n        context.beginPath();\n        var topCurveHeight = this.height * 0.3;\n        context.moveTo(x, y + topCurveHeight);\n        // top left curve\n        context.bezierCurveTo(\n            x,\n            y,\n            x - this.width / 2,\n            y,\n            x - this.width / 2,\n            y + topCurveHeight\n        );\n\n        // bottom left curve\n        context.bezierCurveTo(\n            x - this.width / 2,\n            y + (this.height + topCurveHeight) / 2,\n            x,\n            y + (this.height + topCurveHeight) / 2,\n            x,\n            y + this.height\n        );\n\n        // bottom right curve\n        context.bezierCurveTo(\n            x,\n            y + (this.height + topCurveHeight) / 2,\n            x + this.width / 2,\n            y + (this.height + topCurveHeight) / 2,\n            x + this.width / 2,\n            y + topCurveHeight\n        );\n\n        // top right curve\n        context.bezierCurveTo(x + this.width / 2, y, x, y, x, y + topCurveHeight);\n\n        context.closePath();\n        context.fillStyle = this.color;\n        context.fill();\n        context.restore();\n    };\n\n    drawClub(context, x, y) {\n        context.save();\n        var circleRadius = this.width * 0.3;\n        var bottomWidth = this.width * 0.5;\n        var bottomHeight = this.height * 0.35;\n        context.fillStyle = this.color;\n\n        // top circle\n        context.beginPath();\n        context.arc(\n            x,\n            y + circleRadius + this.height * 0.05,\n            circleRadius,\n            0,\n            2 * Math.PI,\n            false\n        );\n        context.fill();\n\n        // bottom right circle\n        context.beginPath();\n        context.arc(\n            x + circleRadius,\n            y + this.height * 0.6,\n            circleRadius,\n            0,\n            2 * Math.PI,\n            false\n        );\n        context.fillStyle = this.color;\n        context.fill();\n\n        // bottom left circle\n        context.beginPath();\n        context.arc(\n            x - circleRadius,\n            y + this.height * 0.6,\n            circleRadius,\n            0,\n            2 * Math.PI,\n            false\n        );\n        context.fillStyle = this.color;\n        context.fill();\n\n        // center filler circle\n        context.beginPath();\n        context.arc(x, y + this.height * 0.5, circleRadius / 2, 0, 2 * Math.PI, false);\n        context.fill();\n\n        // bottom of club\n        context.moveTo(x, y + this.height * 0.6);\n        context.quadraticCurveTo(x, y + this.height, x - bottomWidth / 2, y + this.height);\n        context.lineTo(x + bottomWidth / 2, y + this.height);\n        context.quadraticCurveTo(x, y + this.height, x, y + this.height * 0.6);\n        context.closePath();\n        context.fill();\n        context.restore();\n    }\n\n    drawDiamond(context, x, y) {\n        context.save();\n        context.beginPath();\n        context.moveTo(x, y);\n\n        // top left edge\n        context.lineTo(x - this.width / 2, y + this.height / 2);\n\n        // bottom left edge\n        context.lineTo(x, y + this.height);\n\n        // bottom right edge\n        context.lineTo(x + this.width / 2, y + this.height / 2);\n\n        // closing the path automatically creates\n        // the top right edge\n        context.closePath();\n\n        context.fillStyle = this.color;\n        context.fill();\n        context.restore();\n    }\n}\n","export default class Spot {\n    constructor(location) {\n        this.location = location;\n        this.coordinates = this.getCoordinates();\n    }\n\n    getCoordinates() {\n        switch (this.location) {\n            case \"top\":\n                return { x: 159, y: 16 };\n                break;\n            case \"right\":\n                return { x: 251, y: 57 };\n                break;\n            case \"bottom\":\n                return { x: 159, y: 99 };\n                break;\n            case \"left\":\n                return { x: 67, y: 57 };\n                break;\n        }\n    }\n}"],"sourceRoot":""}